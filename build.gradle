/*
# Copyright 2017 Paul Lalonde enrg.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'

group = 'ca.paullalonde.gocd.sns_plugin'
version = '0.5'

// these values that go into plugin.xml
project.ext.pluginDesc = [
    id         : 'sns.notification.plugin',
    version    : project.version,
    goCdVersion: '17.3.0',
    name       : 'SNS Notification Plugin',
    description: 'Sends notifications to the AWS Simple Notification Service (SNS)',
    vendorName : 'Paul Lalonde',
    vendorUrl  : 'https://github.com/paullalonde/gocd-sns-plugin'
]

// Force 1.7 compatibility to ensure that it works with older JVMs
sourceCompatibility = 1.7
targetCompatibility = 1.7

// In this section you declare where to find the dependencies of your project
repositories {
  jcenter()
  mavenCentral()
  mavenLocal()
}

dependencies {
  compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
  compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
  compile group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.11.123'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
  testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.3.0'
  testCompile group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
}

processResources {
  from("src/main/resource-templates") {
    filesMatching('plugin.xml') {
      expand project.pluginDesc
    }

    filesMatching('plugin.properties') {
      expand project.pluginDesc
    }
  }
}

jar {
  from(configurations.compile) {
    into "lib/"
  }
}
